
        #region Old Tests
        // First few lines of the YAML file for bookings
        // description: What's the diffrence between a booking and a quote request?
        // group: booking_core
        // columns:
        // - name: air
        //     description: Does transportation mode include Air?
        private static void ParseYamlAnnotationFile() {
            Schema schema = Schema.Singleton;
            ParseMainModelDir();        // Extract teams and find paths of Ruby files
            Table table = schema.FindByDbName("bookings");

            List<Error> errors = new List<Error>();
            YamlAnnotationParser.Parse(table, errors);
            AreEqual("What's the diffrence between a booking and a quote request?", table.Description);
            AreEqual("booking_core", table.Group);
            True(table.FindColumn("air").Description.StartsWith("Does transportation mode include Air?"));
        }

        private static void ParseMainModelDir() {
            ModelDirParser parser = new ModelDirParser();
            parser.ParseDir("/datamodel/models");
            parser.ParseDir("/datamodel/customs_models");
        }

        private static void ParseSchema() {
            AreEqual(739, Schema.Singleton.Tables.Count);
        }
        #endregion

        #region Asserts
        private static void AreEqual(object expected, object actual) {
            if (expected == null && actual == null)
                return;
            if (expected == null || !expected.Equals(actual))
                throw new Exception(string.Format("Expected: {0}. Actual: {1}", expected, actual));
        }

        private static void True(bool? value) {
            if (value != true)
                throw new Exception("Value was supposed to be true");
        }

        private static void False(bool? value) {
            if (value != false)
                throw new Exception("Value was supposed to be false");
        }
        #endregion
